<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.skyhuang.spring3"/>


	<!-- demo6Bean的集合属性注入==================================== -->
	<bean id="collectionBean" class="com.skyhuang.spring3.demo6.CollectionBean">
		<!-- 注入List集合 -->
		<property name="list">
			<list>
				<value>童童</value>
				<value>小凤</value>
			</list>
		</property>

		<!-- 注入set集合 -->
		<property name="set">
			<set>
				<value>杜宏</value>
				<value>如花</value>
			</set>
		</property>

		<!-- 注入map集合 -->
		<property name="map">
			<map>
				<entry key="刚刚" value="111"/>
				<entry key="娇娇" value="333"/>
			</map>
		</property>

		<property name="properties">
			<props>
				<prop key="username">root</prop>
				<prop key="password">123</prop>
			</props>
		</property>
	</bean>


	<!-- demo6Bean的集合属性注入==================================== -->






	<!-- demo5Bean的属性注入==================================== -->
	<bean id="car" class="com.skyhuang.spring3.demo5.Car">
		<!--<constructor-arg name="name" value="宝马"/>
		<constructor-arg name="price" value="1000"/>-->
		<constructor-arg index="0" type="java.lang.String" value="奔驰"/>
		<constructor-arg index="1" type="java.lang.Double" value="2000000"/>
	</bean>

	<!--<bean id="car2" class="com.skyhuang.spring3.demo5.Car2">
		&lt;!&ndash;<property>标签中name就是属性名称,value是普通属性的值,ref:引用其他的对象&ndash;&gt;
		<property name="name" value="奇瑞QQ"/>
		<property name="price" value="20000"/>
	</bean>-->

	<!-- <bean id="car2" class="com.skyhuang.spring3.demo5.Car2" p:name="宝马" p:price="400000"/> -->

	<bean id="car2" class="com.skyhuang.spring3.demo5.Car2">
		<property name="name" value="#{'大众'}"></property>
		<property name="price" value="#{'120000'}"></property>
	</bean>

	<!--<bean id="person" class="com.skyhuang.spring3.demo5.Person">
		<property name="name" value="任童"/>
		<property name="car2" ref="car2"/>
	</bean>-->


	<!-- p名称空间的写法 -->
	<!-- <bean id="car2" class="cn.itcast.spring3.demo5.Car2" p:name="宝马" p:price="400000"/> -->

	<!--<bean id="person" class="com.skyhuang.spring3.demo5.Person" p:name="童童" p:car2-ref="car2" />-->

	<!-- SpEL写法 -->
	<bean id="person" class="com.skyhuang.spring3.demo5.Person">
		<property name="name" value="#{personInfo.showName()}"/>
		<property name="car2" value="#{car2}"/>
	</bean>

	<bean id="personInfo" class="com.skyhuang.spring3.demo5.PersonInfo">
		<property name="name" value="张三"/>
	</bean>

	<!-- demo5Bean的属性注入==================================== end-->



	<!-- demo4Bean的生命周期==================================== -->
	<!-- <bean id="customerService" class="com.skyhuang.spring3.demo4.CustomerServiceImpl" init-method="setup" destroy-method="teardown">
		<property name="name" value="itcast"/>
	</bean>
	<bean class="com.skyhuang.spring3.demo4.MyBeanPostProcessor"/>-->
	<!-- demo4Bean的生命周期==================================== end-->


	<!-- demo3Bean的作用范围==================================== start-->
	<!--<bean id="testCustomer" class="com.skyhuang.spring3.demo3.TestCustomer" scope="singleton"/>-->
	<!--<bean id="product" class="com.skyhuang.spring3.demo3.Product" init-method="setup" destroy-method="teardown">
		<property name="name" value="空调"/>
	</bean>-->
	<!-- demo3Bean的作用范围==================================== end-->


	<!-- demo2Bean的实例化==================================== start-->
	<!-- 默认情况下使用的就是无参数的构造方法. -->
	<!--<bean id="bean1" class="com.skyhuang.spring3.demo2.Bean1"/>-->
	<!-- 第二种使用静态工厂实例化 -->
	 <!--<bean id="bean2" class="com.skyhuang.spring3.demo2.Bean2Factory" factory-method="getBean2"/>
	 <bean id="bean3" factory-bean="bean3Factory" factory-method="getBean3"/>
	 <bean id="bean3Factory" class="com.skyhuang.spring3.demo2.Bean3Factory"/>-->
	<!-- demo2Bean的实例化==================================== end-->


	<!-- demo1快速入门==================================== start-->
	<!-- 通过一个<bean>标签设置类的信息,通过id属性为类起个标识. -->
	<!--<bean id="helloService" class="com.skyhuang.spring3.demo1.HelloServiceImpl">
		&lt;!&ndash; 使用<property>标签注入属性 &ndash;&gt;
		<property name="info" value="传智播客(磁盘路径)"/>
	</bean>-->
	<!-- demo1快速入门==================================== end-->
</beans>